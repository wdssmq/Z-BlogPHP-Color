name: phpz
scopeName: text.html.phpz
injectionSelector: L:text.html
patterns:
  - include: "#phpz-block"
  - include: "#phpz-line-begin"
  - include: "#phpz-line-end"
  - include: "#phpz-echo"
repository:
  phpz-block:
    begin: "{(php)}"
    beginCaptures:
      "0":
        name: phpz-block-begin
      "1":
        name: keyword.control.php
    end: "{(/php)}"
    endCaptures:
      "0":
        name: phpz-block-end
      "1":
        name: keyword.control.php
    patterns:
      - include: source.php
  phpz-line-begin:
    begin: "{(if|foreach|elseif)"
    beginCaptures:
      "0":
        name: phpz-line-begin
      "1":
        name: keyword.control.php
    end: "}"
    patterns:
      - include: source.php
  phpz-line-end:
    patterns:
      - match: '{(/?(?:if|foreach|else)\b)'
        name: phpz-line-end
        captures:
          "1":
            name: keyword.control.php
  phpz-echo:
    patterns:
      - name: phpz-variable
        match: '{(\$[^}\s=]+)[^}]*}'
        captures:
          "1":
            name: variable.other.php
      - name: phpz-include
        match: '{(template):([^}\s]+)}'
        captures:
          "1":
            name: constant.language.php
          "2":
            name: variable.other.php
      - name: phpz-module
        match: '{(module):([^}\s]+)}'
        captures:
          "1":
            name: constant.language.php
          "2":
            name: variable.other.php
